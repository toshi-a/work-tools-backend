version: 0.2

batch:
  fast-fail: false

phases:
  install:
    runtime-versions:
      nodejs: 18.x
  pre_build:
    commands:
      - echo Logging in to Amazon ECR... REGION=${AWS_DEFAULT_REGION}
#      - $(aws ecr get-login --no-include-email --region ${AWS_DEFAULT_REGION})
      - AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query 'Account' --output text)
      - aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com
      - REPOSITORY_URI=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}
      - echo AWS_ACCOUNT_ID = ${AWS_ACCOUNT_ID}
      - echo REPOSITORY_URI = ${REPOSITORY_URI}
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=latest
      - TOKEN=$(curl 169.254.170.2${AWS_CONTAINER_CREDENTIALS_RELATIVE_URI})
      - AWS_ACCESS_KEY_ID=$(echo "${TOKEN}" | jq -r '.Credentials.AccessKeyId')
      - AWS_SECRET_ACCESS_KEY=$(echo "${TOKEN}" | jq -r '.Credentials.SecretAccessKey')
      - AWS_SESSION_TOKEN=$(echo "${TOKEN}" | jq -r '.Credentials.SessionToken')
  build:
    commands:
      - echo Build started on `date`
      - (cd ./src; npm install && npm run build)
      - docker build -t ${IMAGE_REPO_NAME}:${IMAGE_TAG} -f docker/Dockerfile-product .
      - docker tag ${IMAGE_REPO_NAME}:${IMAGE_TAG} ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:${IMAGE_TAG}
  post_build:
    commands:
      - echo Build completed on `date`
      - echo "--------------------"
      - curl 169.254.170.2${AWS_CONTAINER_CREDENTIALS_RELATIVE_URI}
      - env
      - echo "--------------------"
      - docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:${IMAGE_TAG}
      # docker push 212517848830.dkr.ecr.ap-northeast-1.amazonaws.com/toshi/work-tools-backend:latest



#    "RoleArn":"AQICAHh3CCnsCNrnpoKz7FwlavSpwTJLcUEaiUAWrPVFY51joQHfMOFEnGhRDPb/AsvIKvInAAAA+jCB9wYJKoZIhvcNAQcGoIHpMIHmAgEAMIHgBgkqhkiG9w0BBwEwHgYJYIZIAWUDBAEuMBEEDAORWewxJzGPR60e6AIBEICBst7rj1MsSPQzsk6VZ86MEcWQzUMhFlajX4z34EHwB9IzenZTufuIRYbH6Efw9kL0ZqN88XbesrdlzCdZsp9daryYY1l165HTHuMDROmo6+Z3q8EoRonzEz3FgOMzfsYvWxL7FOKNOUlW6D7LBFzEBIWSDgt3technyySOPRtGyekpLTAYhl78EycK0/0MYoJnt1o5bWbotmNqpf+hPj1m/kPdvtKR5zW8xYIBFnunosCOJ8=",
#    "AccessKeyId":"ASIATC6YNA37LIUZDSGK",
#    "SecretAccessKey":"***",
#    "Token":"IQoJb3JpZ2luX2VjECEaDmFwLW5vcnRoZWFzdC0xIkYwRAIgEhs0AYYI6Whlx+op2SyWzkp9O8nuN2JtxuE7o+G8LwcCIDHHyW2X1EN5uPn48Woims4Ayoq1clDuPSzRMLRK7AHUKq4DCBoQBBoMMjEyNTE3ODQ4ODMwIgy4Zg06CRRiz5/kQMoqiwO/D6vVDqwJ4VHy6Y9Rqxm0cZ3TCwXdEdaPbWWBPTds/cjiR4q4H/N5Ef2F/smeicaBRa2dCQ90EZJxMHF+i9osJ7RVXBtcBHmFhOKJeKosL77v04GSfolWg8tgx3doFCQ9UaYsqevp7woewoR/Pb4/7E69Q+yBspx25Kdd9kJl674EuSM1O6m7pDf4FJOlTntR59jgd47I32iZimmLA8V9BW0wS1sj8ndhAk1GgcKuPaAu5n5c9PVYjMRRC8NK9/+vesWdcEBu+WP3QiJKCzgZfv41Cv/izQcMifOwuV04eHMGJkoQ5aJM4ZRoRYC5Er/CzcdRI1yiyh9qcVqOtXwI3v8UPF6PAzr+mnYIwq2dYTlgXbIgn9PBCqj4GZgKDC+gIQGWHKnWzcuZdVYf3lpb3Onh02q2j41gs/yYC+s9QzFbbLHtz6CQJVCIdQtpU8td+KCxNcRRf5HDZlPiDkbOygUE+Zc7qUQJX9WE8ZCQkL12oRUVzOYVgOgU+iS4MpVpMPSOXboCih90GzDY6YKvBjqUATU8+KlsFS51WVnOLQaL5mHs83XC9xNqLLYHTDIO4IGCymjIy5oEX4q1U9WrkI5XuBBC4P5fpm9/Q9pq//pw7qZFHA1YyYO/j/bWQ6OrCEScuPvUb95JTSwjd7sFZpS2nW3eLalx6u6k6zzrlk0lk0hbwDyJVMHfnqwvyye3phRrb9+BD9ZpYI7diTjo1ARiTD8IVt4=",
#    "Expiration":"2024-02-29T17:46:16Z"}

